@page "/"
@using SbShared.Models
@using SbSender.Services
@inject IQueueService queue

<PageTitle>Index</PageTitle>

<h1> SERVICE BUS DEMO </h1>

<h4> This demo is built for testing message queues in Azure Service Bus</h4>

<EditForm Model="@person" OnInvalidSubmit="@Publishmessage">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="form-group">
        <label for="firstName"> First Name </label>
        <InputText id="firstName" class="from-control" @bind-Value="person.FirstName" />
    </div> 
    <div class="form-group">
        <label for="lastName"> Last Name </label>
        <InputText id="lastName" class="from-control" @bind-Value="person.LastName" />
    </div>
    <button type="submit" class="btn btn-primary">Submit</button>
</EditForm>

@code{
    private PersonModel person = new PersonModel();

    private async Task Publishmessage()
    {
        // When you publish a message it will be sent to the que and then clear the person (new PersonModel)
        // so we can start over with a new person
        await queue.SendMessageAsync(person, "personqueue");
        person = new PersonModel(); 
    }
}

